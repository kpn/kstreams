# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# We should restore the cache and remove extra requirements installations after this is resolved https://github.com/actions/setup-python/issues/182

name: Tests

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:
    inputs:
      release:
        description: 'Release package'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Set Cache
      uses: actions/cache@v3
      id: cache  # name for referring later
      with:
        path: .venv/
        # The cache key depends on poetry.lock
        key: ${{ runner.os }}-cache-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-cache-
          ${{ runner.os }}-

    - name: Install Dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install -U pip poetry
        poetry --version
        poetry config --local virtualenvs.in-project true
        poetry install

    - name: Test and Lint
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        ./scripts/test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        flags: unittests
        name: kstreams
        fail_ci_if_error: true
        token: ${{secrets.CODECOV_TOKEN}}
